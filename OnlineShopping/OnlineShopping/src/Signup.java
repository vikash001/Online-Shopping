
import java.awt.CardLayout;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.net.URL;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vaibhavatul47
 */
public class Signup extends javax.swing.JPanel {

    /**
     * Creates new form Signup
     */
    Image img;
    public int CaptchaAns;
    
    public Signup() {
        initComponents();
	
	
	 ImageIcon ic = new ImageIcon(getClass().getResource("/images/spBg.jpg"));
        
        img = ic.getImage();
        
        Dimension d = new Dimension(img.getWidth(null), img.getHeight(null));
        setPreferredSize(d);
        setMinimumSize(d);
        setMaximumSize(d);
        setSize(d);
    }
    
    public void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        
        g.drawImage(img, 0, 0, this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SignupPanel = new javax.swing.JPanel();
        spPleaseLabel = new javax.swing.JLabel();
        spEmailLabel = new javax.swing.JLabel();
        spSecQuesLabel = new javax.swing.JLabel();
        spSecAnsLabel = new javax.swing.JLabel();
        spPasswordLabel = new javax.swing.JLabel();
        spRePasswordLabel = new javax.swing.JLabel();
        spUsername = new javax.swing.JTextField();
        spSecurityQuestion = new javax.swing.JComboBox();
        spSecurityAnswer = new javax.swing.JTextField();
        spPassword = new javax.swing.JPasswordField();
        spRePassword = new javax.swing.JPasswordField();
        spMobileLabel = new javax.swing.JLabel();
        spMobileNo = new javax.swing.JTextField();
        spCityLabel = new javax.swing.JLabel();
        spCity = new javax.swing.JTextField();
        spName = new javax.swing.JTextField();
        spNameLabel = new javax.swing.JLabel();
        spCaptchaLabel = new javax.swing.JLabel();
        spCaptchaAns = new javax.swing.JTextField();
        spSubmit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        SignupPanel.setOpaque(false);

        spPleaseLabel.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        spPleaseLabel.setForeground(new java.awt.Color(102, 102, 102));
        spPleaseLabel.setText("Please enter the following details:");

        spEmailLabel.setFont(new java.awt.Font("Shruti", 0, 14)); // NOI18N
        spEmailLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        spEmailLabel.setText("Username  ");

        spSecQuesLabel.setFont(new java.awt.Font("Shruti", 0, 14)); // NOI18N
        spSecQuesLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        spSecQuesLabel.setText("Security Question  ");

        spSecAnsLabel.setFont(new java.awt.Font("Shruti", 0, 14)); // NOI18N
        spSecAnsLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        spSecAnsLabel.setText("Answer  ");

        spPasswordLabel.setFont(new java.awt.Font("Shruti", 0, 14)); // NOI18N
        spPasswordLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        spPasswordLabel.setText("Password  ");

        spRePasswordLabel.setFont(new java.awt.Font("Shruti", 0, 14)); // NOI18N
        spRePasswordLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        spRePasswordLabel.setText("Re-enter Password  ");

        spUsername.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        spSecurityQuestion.setMaximumRowCount(6);
        spSecurityQuestion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " -- Please Choose --", "What is your lucky number ?", "What is your pet name ?", "What is your birth place ?", "Who is your favourite teacher ?", "What is your school name ?", "What is your vehicle registration number ?", "What is the name of your village ?", "Who is your role model ?", "What is your childhood friend name ?", "What is your favourite subject ?" }));
        spSecurityQuestion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        spMobileLabel.setFont(new java.awt.Font("Shruti", 0, 14)); // NOI18N
        spMobileLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        spMobileLabel.setText("Mobile  ");

        spCityLabel.setFont(new java.awt.Font("Shruti", 0, 14)); // NOI18N
        spCityLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        spCityLabel.setText("City   ");

        spName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        spNameLabel.setFont(new java.awt.Font("Shruti", 0, 14)); // NOI18N
        spNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        spNameLabel.setText("Name  ");

        spCaptchaLabel.setFont(new java.awt.Font("Shruti", 0, 14)); // NOI18N
        spCaptchaLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        spCaptchaLabel.setText("8 + 9 =  ");

        javax.swing.GroupLayout SignupPanelLayout = new javax.swing.GroupLayout(SignupPanel);
        SignupPanel.setLayout(SignupPanelLayout);
        SignupPanelLayout.setHorizontalGroup(
            SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignupPanelLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(SignupPanelLayout.createSequentialGroup()
                        .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(spMobileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spSecQuesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spSecAnsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spPasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spRePasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spEmailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spCityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(spCaptchaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(spSecurityQuestion, javax.swing.GroupLayout.Alignment.LEADING, 0, 360, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SignupPanelLayout.createSequentialGroup()
                                .addComponent(spMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 147, Short.MAX_VALUE))
                            .addGroup(SignupPanelLayout.createSequentialGroup()
                                .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(spSecurityAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                                    .addComponent(spPassword)
                                    .addComponent(spRePassword)
                                    .addComponent(spUsername)
                                    .addComponent(spCity)
                                    .addComponent(spCaptchaAns))
                                .addGap(146, 146, 146))))))
            .addGroup(SignupPanelLayout.createSequentialGroup()
                .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SignupPanelLayout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(spName, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SignupPanelLayout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(spPleaseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        SignupPanelLayout.setVerticalGroup(
            SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignupPanelLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(spPleaseLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(spName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spEmailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(spUsername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(SignupPanelLayout.createSequentialGroup()
                        .addComponent(spPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spRePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spRePasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spSecurityQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spSecQuesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spSecurityAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spSecAnsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SignupPanelLayout.createSequentialGroup()
                        .addGap(0, 13, Short.MAX_VALUE)
                        .addComponent(spMobileLabel))
                    .addComponent(spMobileNo, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spCityLabel)
                    .addComponent(spCity, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spCaptchaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(spCaptchaAns))
                .addGap(49, 49, 49))
        );

        add(SignupPanel);
        SignupPanel.setBounds(90, 100, 711, 487);

        spSubmit.setText("Sign Up!");
        spSubmit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spSubmitMouseClicked(evt);
            }
        });
        spSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spSubmitActionPerformed(evt);
            }
        });
        add(spSubmit);
        spSubmit.setBounds(790, 460, 130, 44);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cancel");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        add(jLabel1);
        jLabel1.setBounds(820, 520, 99, 27);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        reset();
        CardLayout card = (CardLayout) this.getParent().getLayout();
        card.show(this.getParent(), "loginCard");
        ((LoginFrame)this.getTopLevelAncestor()).loginFocus();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void spSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spSubmitActionPerformed
        startVerification();
    }//GEN-LAST:event_spSubmitActionPerformed

    private void spSubmitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spSubmitMouseClicked
        // TODO add your handling code here:
        startVerification();
    }//GEN-LAST:event_spSubmitMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SignupPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField spCaptchaAns;
    public javax.swing.JLabel spCaptchaLabel;
    private javax.swing.JTextField spCity;
    private javax.swing.JLabel spCityLabel;
    private javax.swing.JLabel spEmailLabel;
    private javax.swing.JLabel spMobileLabel;
    private javax.swing.JTextField spMobileNo;
    private javax.swing.JTextField spName;
    private javax.swing.JLabel spNameLabel;
    private javax.swing.JPasswordField spPassword;
    private javax.swing.JLabel spPasswordLabel;
    private javax.swing.JLabel spPleaseLabel;
    private javax.swing.JPasswordField spRePassword;
    private javax.swing.JLabel spRePasswordLabel;
    private javax.swing.JLabel spSecAnsLabel;
    private javax.swing.JLabel spSecQuesLabel;
    private javax.swing.JTextField spSecurityAnswer;
    private javax.swing.JComboBox spSecurityQuestion;
    private javax.swing.JButton spSubmit;
    private javax.swing.JTextField spUsername;
    // End of variables declaration//GEN-END:variables
    private void startVerification() {
        if (isValidForm()) {
            insertIntoDB();
            JOptionPane.showMessageDialog(SignupPanel, "Please Login to get Started!", "Congratulations", JOptionPane.DEFAULT_OPTION);
            
            ((LoginFrame)this.getTopLevelAncestor()).initialisePerson();
            reset();
            CardLayout card = (CardLayout) this.getParent().getLayout();
            card.show(this.getParent(), "startCard");
        }
        else {
            resetForm();
        }
    }
    
    private void insertIntoDB() {
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", database.uname, database.password);
            
            String sql = "INSERT INTO CUSTOMER VALUES (?, ?, ?, ?, ?, ?, ?)";
            String sql2 = "SELECT customer_id FROM customer WHERE customer_id = ?";
            
            PreparedStatement pstmt = conn.prepareStatement(sql);
            PreparedStatement pstmt2 = conn.prepareStatement(sql2);
            
            pstmt2.setString(1, spUsername.getText());
            ResultSet rset = pstmt2.executeQuery();
            
            if (rset.next()) {
                // Already Exist
                JOptionPane.showMessageDialog(SignupPanel, "Username already exists !");
                resetForm();
            }
            else {
                //System.out.println(Integer.parseInt(spMobileNo.getText()));
                pstmt.setString(1, spUsername.getText());
                pstmt.setString(2, spName.getText());
                pstmt.setString(3, spMobileNo.getText());
                pstmt.setString(4, spPassword.getText());
                pstmt.setInt(5, spSecurityQuestion.getSelectedIndex());
                pstmt.setString(6, spSecurityAnswer.getText());
                pstmt.setString(7, spCity.getText());
                pstmt.executeUpdate();
                pstmt.close();
                conn.commit();
                conn.close();
            }
            
        } catch (SQLException ex) {
		Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
	}
    }
    
    private boolean isValidForm() {
        if (spUsername.getText().equals("") || spName.getText().equals("") || spMobileNo.getText().equals("") || spPassword.getText().equals("") || spSecurityQuestion.getSelectedIndex() == 0 || spSecurityAnswer.getText().equals("") || spCity.getText().equals("")) {
            JOptionPane.showMessageDialog(SignupPanel, "Some fields are Empty!", "User Error", 1);
            return false;
        }
        if (!spPassword.getText().equals(spRePassword.getText())) {
            JOptionPane.showMessageDialog(SignupPanel, "Passwords didn't matched", "oops !!!", 1);
            return false;
        }
        try {
            if (CaptchaAns != Integer.parseInt(spCaptchaAns.getText())) {
                JOptionPane.showMessageDialog(SignupPanel, "Human Verification Failed", "oops !!!", 1);
                return false;
            }
        } catch (NumberFormatException nf) {
            JOptionPane.showMessageDialog(SignupPanel, "Human Verification Failed", "oops !!!", 1);
            return false;   
        }
            
        
        
        String tmp = spMobileNo.getText();
        if (tmp.length() != 10) {
            JOptionPane.showMessageDialog(SignupPanel, "Invalid Mobile Number", "User Error", 1);
            return false;
        }
        for (int i = 0; i < tmp.length(); i++) {
            if (!(tmp.charAt(i) == '0' || tmp.charAt(i) == '1' || tmp.charAt(i) == '2' || tmp.charAt(i) == '3' || tmp.charAt(i) == '4' || tmp.charAt(i) == '5' || tmp.charAt(i) == '6' || tmp.charAt(i) == '7' || tmp.charAt(i) == '8' || tmp.charAt(i) == '9')) {
                JOptionPane.showMessageDialog(SignupPanel, "Invalid Mobile Number", "User Error", 1);
                return false;
            }
        }
        return true;
    }
    
    private void resetForm() {
        spUsername.setText("");
        spPassword.setText("");
        spRePassword.setText("");
        updateCaptcha();
    }
    
    private void updateCaptcha() {
        int CaptchaA = (int) ((Math.random() * 100) % 9 + 1);
        int CaptchaB = (int) ((Math.random() * 100) % 9 + 1);
        CaptchaAns = CaptchaA + CaptchaB;
        spCaptchaLabel.setText(CaptchaA + " + " + CaptchaB + " =  ");
    }
    
    void reset() {
        spUsername.setText("");
        spName.setText("");
        spMobileNo.setText("");
        spPassword.setText("");
        spRePassword.setText("");
        spSecurityQuestion.setSelectedIndex(0);
        spSecurityAnswer.setText("");
        spCity.setText("");
        spCaptchaAns.setText("");
    }
    
    void setFocusTOName() {
        spName.requestFocus();
    }
}
